plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id("com.github.node-gradle.node") version "2.2.0"
}


group = 'letscode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

task buildFront(type: YarnTask) {
	args = ['build']
}

yarn_install.dependsOn(yarn_cache_clean)
buildFront.dependsOn(yarn_install)
processResources.dependsOn(buildFront)

repositories {
	mavenCentral()
}

node {
	download = true
	version = "12.13.1"
	npmVersion = "6.9.0"
	yarnVersion = "1.17.3"
	nodeModulesDir = project.file("ui")
	workDir = project.file("${project.buildDir}/nodejs")
	npmWorkDir = project.file("${project.buildDir}/npm")
	yarnWorkDir = project.file("${project.buildDir}/yarn")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("org.springframework.boot:spring-boot-starter-websocket")
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.0.RELEASE')
	implementation 'org.postgresql:postgresql'
	compile 'org.jsoup:jsoup:1.11.3'
	implementation 'org.projectlombok:lombok'
	implementation 'javax.xml.bind:jaxb-api'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}


test {
	useJUnitPlatform()
}


